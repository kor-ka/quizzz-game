{"version":3,"sources":["model/GameModel.ts","model/SessionModel.ts","ui/ui.tsx","components/Scene.tsx","components/Controls.tsx","components/Helpers.ts","components/useAnimation.tsx","utils/hashCode.ts","components/GameRender.tsx","components/JoiningRender.tsx","utils/spiralCoord.ts","components/SesssionComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GameModel","session","state","scores","Map","ttl","stack","setState","listeners","Set","listen","lsitener","add","delete","notify","forEach","l","handleEvent","event","notifyers","type","sesssionState","onGameStarted","reverse","map","q","isCurretn","qid","question","_id","console","warn","active","completed","id","gid","user","users","get","uid","set","score","reset","this","endpoint","window","location","hostname","indexOf","Emitter","socket","emit","message","JSON","stringify","SessionModel","io","usersListeners","sesssionStateListeners","myId","me","meListeners","isMobile","game","init","socketIo","transports","reconnectionAttempts","Number","MAX_SAFE_INTEGER","on","handleBatch","open","batchRaw","batch","parse","e","n","log","current","index","size","notifyUser","notifyMeUser","notifyState","subscribeUsers","listener","subscribeMeUser","subscribeSessionState","Cookie","split","chrome","FlexLayout","Glamorous","div","props","display","flexDirection","flexShrink","WebkitOverflowScrolling","boxSizing","style","marginLeft","undefined","divider","marginRight","marginTop","marginBottom","ButtonInner","minWidth","color","whiteSpace","fontSize","backgroundColor","padding","paddingTop","paddingBottom","justifyContent","borderRadius","cursor","textAlign","userSelect","outline","Button","className","onClick","children","Input","border","selected","input","minHeight","borderWidth","lineHeight","appearance","SceneContext","React","Scene","ref","scene","cam","renderer","frameId","tickListeners","subscribeTicks","start","requestAnimationFrame","tick","stop","cancelAnimationFrame","renderScene","render","ReactDOM","width","clientWidth","height","clientHeight","THREE","position","z","y","rotation","x","degToRad","light","target","antialias","setClearColor","setSize","appendChild","domElement","gridHelper","rotateX","Provider","value","innerWidth","innerHeight","SessionStateComponent","setTimeout","loading","setLoading","SessionContext","s","interval","setInterval","left","Date","getTime","clearInterval","startStop","zIndex","opacity","bottom","right","Math","floor","max","Profile","setMe","onChange","name","alignSelf","defaultValue","placeholder","AnswerText","answer","setAnsser","onPick","answers","a","AnswerOpen","GameTTL","timeout","Question","submited","setSubmited","onSubmit","offset","overflowY","flexGrow","pointerEvents","textAnswers","background","Results","Array","from","values","sort","b","us","Game","key","getCard","shape","moveTo","lineTo","absarc","geometry","steps","depth","bevelEnabled","material","mesh","center","text","getTextMesh","font","bold","canvas","document","createElement","devicePixelRatio","context","getContext","scale","maxWidth","fillStyle","fillRect","words","line","lines","realWidth","length","testLine","measureText","push","realMetrics","startY","startX","i","fillText","wrapText","texture","needsUpdate","minFilter","transparent","remove","IN_OUT","interpolate","to","useAnimation","end","animation","setAnimation","duration","now","clone","toVector3","rcb","BezierEasing","pcb","dispose","time","mu","pmu","rmu","hashCode","h","charCodeAt","GameCard","card","cardAnimatTo","xTremor","positionTremor","yTremor","rotationTremor","zTremor","targetPostion","vertAngle","fov","distanceV","base","tan","horisontalBase","aspect","horAngle","atan","distanveH","camMesh","Mesh","copy","camGamePostion","setFromVector3","camGameRotation","updateMatrixWorld","translateZ","Vector3","getWorldPosition","targetRotation","GameRender","cards","setCards","gs","c","UserCards","coords","k","ceil","sqrt","t","m","spiralCoord","translateX","translateY","JoiningRender","setUsers","u","camAwaitPostion","camAwaitRotation","SessionComponent","SceneRender","camAnimatTo","sessionState","update","sub1","sub2","createContext","App","pathname","filter","Boolean","match","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f332597.chunk.js","sourcesContent":["import { Event } from '../../server/src/entity/events';\nimport { SessionModel } from './SessionModel';\nimport { ClientUser } from '../../server/src/user/User';\nimport { ClientQuestion, GameState as State } from '../../server/src/game/Game';\n\nexport interface GameState {\n    id?: string;\n    scores: Map<string, { user: ClientUser, score: number }>;\n    question?: ClientQuestion;\n    stack: { qid: string, category: string, question?: ClientQuestion, active: boolean }[]\n    state: State | 'wait';\n    ttl: number\n}\n\nexport class GameModel {\n    session: SessionModel;\n    constructor(session: SessionModel) {\n        this.session = session;\n    }\n\n    state: GameState = { scores: new Map(), state: 'wait', ttl: 0, stack: [] };\n    setState = (state: Partial<GameState>) => {\n        this.state = { ...this.state, ...state };\n    }\n    listeners = new Set<(state: GameState) => void>();\n\n    listen = (lsitener: (state: GameState) => void) => {\n        this.listeners.add(lsitener);\n        lsitener(this.state);\n        return () => {\n            this.listeners.delete(lsitener);\n        }\n    }\n\n    notify = () => {\n        this.listeners.forEach(l => l(this.state));\n    }\n\n\n    // TOOD create separate game states?\n    handleEvent = (event: Event, notifyers: Set<() => void>) => {\n        if (event.type === 'GameStateChangedEvent') {\n            if (this.session.sesssionState.state !== 'game' && event.state === 'question') {\n                this.session.onGameStarted();\n            }\n            event.stack.reverse();\n            let stack = event.stack.map(q => {\n                let isCurretn = q.qid === (event.question && event.question._id);\n                console.warn(q.qid, event.question && event.question._id);\n                if (isCurretn) {\n                    return { ...q, question: event.question, active: !q.completed };\n                } else {\n                    return { ...q, active: true };\n                }\n            });\n            this.setState({ id: event.gid, question: event.question, state: event.state, ttl: event.ttl || 0, stack });\n            notifyers.add(this.notify);\n        } else if (event.type === 'GameScoreChangedEvent') {\n            let user = this.session.users.get(event.uid);\n            if (user) {\n                this.state.scores.set(event.uid, { user, score: event.score })\n                this.setState({ scores: new Map(this.state.scores) });\n            }\n            notifyers.add(this.notify);\n        }\n    }\n\n    reset = () => {\n        this.state = { scores: new Map(), state: 'wait', ttl: 0, stack: [] };\n        this.notify();\n    }\n\n}","import * as socketIo from 'socket.io-client';\nimport { Message } from '../../server/src/entity/messages';\nimport { ClientUser } from '../../server/src/user/User';\nimport { SessionState } from '../../server/src/session/Session';\nimport * as Cookie from 'js-cookie';\nimport { Event } from '../../server/src/entity/events';\nimport { GameModel } from './GameModel';\nexport const endpoint = window.location.hostname.indexOf('localhost') >= 0 ? 'http://localhost:5000' : '';\n\nexport type ClientUserIndexed = ClientUser & { index: number };\n\nclass Emitter {\n    socket: SocketIOClient.Socket;\n    constructor(socket: SocketIOClient.Socket) {\n        this.socket = socket;\n    }\n    emit = (message: Message) => {\n        this.socket.emit('message', JSON.stringify(message));\n    }\n}\n\nexport class SessionModel {\n    id: string;\n    io: Emitter;\n\n    users = new Map<string, ClientUserIndexed>();\n    usersListeners = new Set<(users: Map<string, ClientUserIndexed & { index: number }>) => void>();\n\n    sesssionState: { state: SessionState | 'connecting', ttl: number } = { state: 'connecting', ttl: 0 };\n    sesssionStateListeners = new Set<(sessionState: { state: SessionState | 'connecting', ttl: number }) => void>();\n\n    myId: string;\n    me?: ClientUser;\n    meListeners = new Set<(me: ClientUser) => void>();\n\n    isMobile?: boolean;\n\n    game = new GameModel(this);\n\n    constructor(id: string) {\n        this.id = id;\n        this.io = this.init();\n        this.myId = Cookie.get('quizzz-game-user')!.split(':')[0];\n\n        this.isMobile = Cookie.get('isMobile') === 'true';\n    }\n\n    init = () => {\n        let socket = socketIo(endpoint, { transports: ['websocket'], reconnectionAttempts: Number.MAX_SAFE_INTEGER });\n        let io = new Emitter(socket);\n        socket.on('event', this.handleBatch);\n        socket.on('connect', () => io.emit({ type: 'InitSession', id: this.id }));\n        socket.on('disconnect', socket.open)\n        socket.on('connect_error', socket.open)\n        socket.on('connect_timeout', socket.open)\n\n        return io;\n    }\n\n    handleBatch = (batchRaw: string) => {\n        let batch: { batch: Event[] } = JSON.parse(batchRaw);\n        let notifyers = new Set<() => void>();\n        batch.batch.forEach(e => this.handleEvent(e, notifyers));\n        notifyers.forEach(n => n());\n    }\n\n    handleEvent = (event: Event, notifyers: Set<() => void>) => {\n        console.log('[event]', event);\n        if (event.type === 'UserUpdatedEvent') {\n            let current = this.users.get(event.user._id);\n            this.users.set(event.user._id, { ...event.user, index: current ? current.index : this.users.size });\n            notifyers.add(this.notifyUser);\n            if (event.user._id === this.myId) {\n                this.me = event.user;\n                notifyers.add(this.notifyMeUser);\n            }\n        } else if (event.type === 'SessionUserJoinedEvent') {\n            let current = this.users.get(event.user._id);\n            this.users.set(event.user._id, { ...event.user, index: current ? current.index : this.users.size });\n            if (event.user._id === this.myId) {\n                this.me = event.user;\n                notifyers.add(this.notifyMeUser);\n            }\n            notifyers.add(this.notifyUser);\n        } else if (event.type === 'SessionUserLeftEvent') {\n            this.users.delete(event.user._id);\n            notifyers.add(this.notifyUser);\n        } else if (event.type === 'SessionStateChangedEvent') {\n            this.sesssionState = { state: event.state, ttl: event.ttl || 0 };\n            notifyers.add(this.notifyState);\n            if (event.state === 'await') {\n                this.game.reset();\n            }\n        }\n\n        this.game.handleEvent(event, notifyers);\n    }\n\n    onGameStarted = () => {\n        if (this.sesssionState.state === 'countdown') {\n            this.sesssionState = { state: 'game', ttl: 0 };\n            this.notifyState();\n        }\n    }\n\n    ////\n    // io\n    ////\n\n    subscribeUsers = (listener: (users: Map<string, ClientUserIndexed>) => void) => {\n        this.usersListeners.add(listener);\n        listener(this.users);\n        return () => {\n            this.usersListeners.delete(listener);\n        }\n    }\n\n    subscribeMeUser = (listener: (me: ClientUser) => void) => {\n        this.meListeners.add(listener);\n        if (this.me) { listener(this.me); }\n        return () => {\n            this.meListeners.delete(listener);\n        }\n    }\n\n    subscribeSessionState = (listener: (state: { state: SessionState | 'connecting', ttl: number }) => void) => {\n        this.sesssionStateListeners.add(listener);\n        listener(this.sesssionState);\n        return () => {\n            this.sesssionStateListeners.delete(listener);\n        }\n    }\n\n    notifyUser = () => {\n        this.usersListeners.forEach(l => l(new Map(this.users)));\n        console.log('[session]', 'new users', this.users);\n\n    }\n\n    notifyMeUser = () => {\n        this.meListeners.forEach(l => l({ ...this.me! }));\n        console.log('[session]', 'new me', this.me);\n    }\n\n    notifyState = () => {\n        this.sesssionStateListeners.forEach(l => l({ ...this.sesssionState }));\n        console.log('[session]', 'new state', this.sesssionState);\n    }\n}","import * as React from \"react\";\nimport Glamorous from \"glamorous\";\nexport const isChromium = (window as any).chrome;\n\nexport const FlexLayout = Glamorous.div<{\n    divider?: number;\n    style?: React.CSSProperties;\n}>(props => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexShrink: 0,\n    WebkitOverflowScrolling: \"touch\",\n    boxSizing: \"border-box\",\n    \"> *\": props.style && props.style.flexDirection === 'row' ? {\n        marginLeft: props.divider !== undefined ? props.divider : 5,\n        marginRight: props.divider !== undefined ? props.divider : 5\n    } : {\n            marginTop: props.divider !== undefined ? props.divider : 5,\n            marginBottom: props.divider !== undefined ? props.divider : 5\n        },\n    \">:first-child\": props.style && props.style.flexDirection === 'row' ? {\n        marginLeft: 0\n    } : {\n            marginTop: 0\n        },\n    \">:last-child\": props.style && props.style.flexDirection === 'row' ? {\n        marginRight: 0\n    } : {\n            marginBottom: 0\n        },\n    ...props.style\n}));\n\nexport const Landscape = Glamorous.div({\n    '@media only screen and (orientation: portrait)': {\n        display: 'none',\n    }\n});\n\nexport const Portrait = Glamorous.div({\n    '@media only screen and (orientation: landscape)': {\n        display: 'none',\n    }\n});\n\nconst ButtonInner = Glamorous.div<{ type?: 'danger' }>((props) => ({\n    minWidth: 28,\n    color: 'black',\n    whiteSpace: 'pre-wrap',\n    fontSize: '16px',\n    backgroundColor: props.type === 'danger' ? 'rgba(250, 200, 200, 0.6)' : 'rgba(250, 250, 250, 0.6)',\n    padding: 1,\n    paddingTop: 11,\n    paddingBottom: 9,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    borderRadius: 10,\n    cursor: 'pointer',\n    textAlign: 'center',\n    userSelect: 'none',\n\n    ':focus': {\n        outline: 0\n    },\n\n}));\n\nexport const Button = (props: { className?: string, style?: React.CSSProperties, onClick?: () => void, type?: 'danger', children?: any }) => <ButtonInner type={props.type} className={props.className} style={props.style} onClick={props.onClick}>{props.children}</ButtonInner>\n\nexport const TextContentStyled = Glamorous.div<{ selected?: boolean }>(\n    props => ({\n        whiteSpace: \"pre-wrap\",\n        border: props.selected ? \"1px solid #3E5C6B\" : undefined,\n        color: \"rgba(0, 0, 0, 0.8)\",\n        fontSize: \"16px\",\n        backgroundColor: \"rgba(250, 250, 250, 0.4)\",\n        padding: 10,\n        borderRadius: 10,\n        userSelect: 'none',\n        cursor: \"pointer\"\n    })\n);\n\nexport const ActionTextContentStyled = Glamorous.div<{ selected?: boolean }>(\n    props => ({\n        whiteSpace: \"pre-wrap\",\n        color: \"rgba(0, 0, 0, 0.8)\",\n        fontSize: \"16px\",\n        backgroundColor: \"rgba(250, 250, 250, 0.4)\",\n        padding: 10,\n        userSelect: 'none',\n        borderRadius: 10\n    })\n);\n\nexport const Input = Glamorous.input({\n    minHeight: 24,\n    outline: 0,\n    borderWidth: '0 0 0px',\n    backgroundColor: 'transparent',\n    fontSize: 16,\n    minWidth: 50,\n    lineHeight: 1.5,\n    appearance: 'none',\n});\n\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as THREE from 'three';\nimport { FlexLayout } from \"../ui/ui\";\nexport const isChromium = (window as any).chrome;\n\nexport const SceneContext = React.createContext<{ scene: THREE.Scene, cam: THREE.PerspectiveCamera, subscribeTicks: (listener: () => void) => () => void }>({} as any);\nexport const minSceneCamZ = 500;\n\nexport class Scene extends React.PureComponent<{}, { scene?: THREE.Scene, cam?: THREE.PerspectiveCamera }> {\n    ref = React.createRef<HTMLDivElement>();\n    scene?: THREE.Scene;\n    cam?: THREE.PerspectiveCamera;\n    renderer?: THREE.WebGLRenderer;\n    frameId?: number;\n\n    tickListeners = new Set<() => void>();\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    subscribeTicks = (listener: () => void) => {\n        this.tickListeners.add(listener);\n        return () => {\n            this.tickListeners.delete(listener);\n        }\n    }\n\n    componentDidMount() {\n\n        if (this.ref.current) {\n            let e = ReactDOM.findDOMNode(this.ref.current) as Element;\n            const width = e.clientWidth\n            const height = e.clientHeight\n            //ADD SCENE\n            this.scene = new THREE.Scene()\n            //ADD CAMERAS\n            this.cam = new THREE.PerspectiveCamera(\n                75,\n                width / height,\n                0.1,\n                // so bad\n                Number.MAX_SAFE_INTEGER\n            )\n            this.cam.position.z = minSceneCamZ;\n            this.cam.position.y = -500;\n            this.cam.rotation.x = THREE.Math.degToRad(45);\n\n            const color = 0xFFFFFF;\n            const intensity = 1;\n            const light = new THREE.DirectionalLight(color, intensity);\n            light.position.set(0, 10, 400);\n            light.target.position.set(5, 500, 200);\n            this.scene.add(light);\n            this.scene.add(light.target);\n\n            //ADD RENDERER\n            this.renderer = new THREE.WebGLRenderer({ antialias: true })\n            this.renderer.setClearColor('#ffffff')\n            this.renderer.setSize(width, height)\n            e.appendChild(this.renderer.domElement)\n\n            var gridHelper = new THREE.GridHelper(100000, 1000);\n            gridHelper.rotateX(1.5708);\n            this.scene.add(gridHelper);\n            this.start()\n\n            this.setState({ scene: this.scene, cam: this.cam });\n        }\n\n    }\n    componentWillUnmount() {\n        this.stop()\n        // this.ref.removeChild(this.renderer.domElement)\n    }\n    start = () => {\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.tick)\n        }\n    }\n    stop = () => {\n        cancelAnimationFrame(this.frameId!)\n    }\n    tick = () => {\n        this.tickListeners.forEach(l => l());\n        this.renderScene()\n        this.frameId = window.requestAnimationFrame(this.tick)\n    }\n\n\n    renderScene = () => {\n        this.renderer!.render(this.scene!, this.cam!);\n    }\n    render() {\n        return (\n            <SceneContext.Provider value={{ scene: this.state.scene!, cam: this.state.cam!, subscribeTicks: this.subscribeTicks }}>\n                <div\n                    style={{ width: window.innerWidth, height: window.innerHeight }}\n                    ref={this.ref}\n                />\n                <FlexLayout style={{ width: '100%', height: '100%', position: 'absolute' }} divider={0}>\n                    {this.state.cam && this.state.scene && this.props.children}\n                </FlexLayout>\n            </SceneContext.Provider>\n        )\n    }\n}","import * as React from \"react\";\nimport { SessionState } from \"../../server/src/session/Session\";\nimport { SessionContext } from \"../App\";\nimport { ClientUser } from \"../../server/src/user/User\";\nimport { Button, Input, FlexLayout } from \"../ui/ui\";\nimport { GameState } from \"../model/GameModel\";\nimport { ClientQuestion } from \"../../server/src/game/Game\";\n\n\nexport const SessionStateComponent = () => {\n    let [state, setState] = React.useState<{ state: SessionState | 'connecting', ttl: number }>({ state: 'connecting', ttl: 0 });\n    let [timeout, setTimeout] = React.useState(0);\n    let [loading, setLoading] = React.useState(false);\n    let session = React.useContext(SessionContext);\n    React.useEffect(() => {\n        let dispose = session!.subscribeSessionState(s => {\n            setLoading(false);\n            setState(s);\n        });\n        return dispose;\n    }, [session]);\n\n    React.useEffect(() => {\n        let interval = setInterval(() => {\n            let left = state.ttl - new Date().getTime();\n            setTimeout(left);\n            if (left <= 0) {\n                clearInterval(interval);\n            }\n        }, 100);\n    }, [state.ttl]);\n\n    let startStop = React.useCallback(() => {\n        setLoading(true);\n        if (state.state === 'await') {\n            session!.io.emit({ type: 'SessionStartGameCountdown', id: session!.id })\n        } else {\n            session!.io.emit({ type: 'SessionStopGameCountdown', id: session!.id })\n        }\n    }, [state.state]);\n\n    let reset = React.useCallback(() => {\n        session!.io.emit({ type: 'SessionReset', id: session!.id })\n    }, [state.state]);\n\n    return <FlexLayout style={{ position: 'absolute', height: '100%', width: '100%', zIndex: 100 }} divider={0}>\n        <Profile />\n\n        {(state.state === 'await' || state.state === 'countdown') &&\n            <Button\n                onClick={startStop}\n                style={{\n                    opacity: loading ? 0.5 : 1,\n                    position: 'fixed',\n                    bottom: 20,\n                    left: 20,\n                    right: 20,\n                    fontSize: 120,\n                }} >\n                {state.state === 'await' ? 'start' : Math.floor(Math.max(0, (state.ttl - new Date().getTime()) / 1000))}\n            </Button>}\n        {/* <Button onClick={reset} >RESET</Button> */}\n    </FlexLayout>\n}\n\nexport const Users = () => {\n    let [state, setState] = React.useState<Map<string, ClientUser>>(new Map());\n    let session = React.useContext(SessionContext);\n    React.useEffect(() => {\n        let dispose = session!.subscribeUsers(s => {\n            setState(s);\n        });\n        return dispose;\n    }, [session]);\n\n    return <>{JSON.stringify(Array.from(state))}</>\n}\n\nexport const Profile = () => {\n    let [me, setMe] = React.useState<ClientUser>();\n    let session = React.useContext(SessionContext);\n    React.useEffect(() => {\n        let dispose = session!.subscribeMeUser(s => {\n            setMe(s);\n        });\n        return dispose;\n    }, [session]);\n\n    let onChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        session!.io.emit({ type: 'UserRename', name: event.target.value })\n    }, []);\n\n    return <Input style={{ alignSelf: 'strech', textAlign: 'center', fontSize: 50, padding: 20, backgroundColor: 'rgba(100,100,100, 0.5)' }} defaultValue={me ? me.name : ''} onChange={onChange} placeholder=\"Your Name\" />;\n}\n\n\nexport const AnswerText = (props: { answers: string[], onPick: (answer: string) => void }) => {\n    const [answer, setAnsser] = React.useState<string>();\n\n    const onPick = React.useCallback((answer: string) => {\n        setAnsser(answer);\n        props.onPick(answer);\n    }, []);\n    return <>\n        {props.answers.map((a) => <Button style={{\n            backgroundColor: a === answer ? 'black' : 'white',\n            color: a === answer ? 'white' : 'black',\n        }} onClick={() => onPick(a)}>{a}</Button>)}\n    </>\n}\n\nexport const AnswerOpen = (props: { onPick: (answer: string) => void }) => {\n    const [answer, setAnsser] = React.useState<string>();\n    const onPick = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        let a = event.target.value;\n        setAnsser(a);\n        props.onPick(a);\n    }, []);\n    return <>\n        <Input style={{ border: '1px solid black', borderRadius: 8 }} onChange={onPick} />\n    </>\n}\n\nexport const GameTTL = () => {\n    let session = React.useContext(SessionContext);\n    let [timeout, setTimeout] = React.useState(0);\n    let [state, setState] = React.useState<GameState>(session!.game.state);\n\n    React.useEffect(() => {\n        let dispose = session!.game.listen(s => {\n            setState(s);\n        });\n        return dispose;\n    }, [session]);\n    React.useEffect(() => {\n        let interval = setInterval(() => {\n            let left = Math.floor(Math.max(0, (state.ttl - new Date().getTime()) / 1000));\n            setTimeout(left);\n            if (left <= 0) {\n                clearInterval(interval);\n            }\n        }, 100);\n    }, [state.ttl]);\n\n    return <>{timeout}</>;\n}\n\nexport const Question = (props: { q: ClientQuestion, gid: string }) => {\n    const [answer, setAnsser] = React.useState<string>();\n    const [submited, setSubmited] = React.useState(false);\n    const onPick = React.useCallback((answer: string) => {\n        setAnsser(answer);\n    }, []);\n    let session = React.useContext(SessionContext);\n\n    const onSubmit = React.useCallback(() => {\n        if (!answer || submited) {\n            return;\n        }\n        session!.io.emit({ type: 'Answer', gid: props.gid, answer, qid: props.q._id });\n        setSubmited(true);\n    }, [answer]);\n\n    let aspect = window.innerWidth / (440 + 20);\n    let offset = (310 + 20) * aspect;\n    return <>\n\n        <FlexLayout style={{ position: 'absolute', height: '100%', width: '100%', overflowY: 'scroll' }} divider={0}>\n\n            <FlexLayout style={{ height: offset }} divider={0} >\n                {/* <Button onClick={() => {\n        setState({ ...state, state: state.state === 'question' ? 'subResults' : 'question' })\n    }}> asdasd</Button> */}\n            </FlexLayout>\n            <FlexLayout style={{ flexGrow: 1, backgroundColor: 'rgba(100,100,100, 0.5)', padding: 20, paddingBottom: 68 }} divider={0}>\n                <FlexLayout style={{ pointerEvents: submited ? 'none' : 'auto' }} >\n                    {props.q.open && <AnswerOpen onPick={onPick} />}\n                    {props.q.textAnswers && <AnswerText answers={props.q.textAnswers} onPick={onPick} />}\n                </FlexLayout>\n\n                <Button onClick={onSubmit} style={{\n                    opacity: !answer || submited ? 0.5 : 1,\n                    color: 'white',\n                    fontSize: '22px',\n                    background: 'black',\n                    position: 'fixed', bottom: 20, right: 20,\n                    borderRadius: 48,\n                    width: 148,\n                    height: 48,\n                }}>{submited ? 'ANSWERED' : 'SUBMIT'}</Button>\n\n                <Button style={{\n                    backgroundColor: 'transparent',\n                    opacity: 0.5,\n                    color: 'black',\n                    fontSize: '22px',\n                    position: 'fixed',\n                    bottom: 20, left: 20,\n                    borderRadius: 48,\n                    width: 148,\n                    height: 48,\n                    textAlign: 'left'\n\n                }}><GameTTL /></Button>\n\n            </FlexLayout>\n        </FlexLayout>\n\n    </>\n}\n\nexport const Results = (props: { game: GameState }) => {\n    return <FlexLayout style={{ height: '100%', width: '100%', padding: 20, overflowY: 'scroll' }}>\n        {Array.from(props.game.scores.values()).sort((a, b) => b.score - a.score).map(us => {\n            return <FlexLayout style={{ padding: 20, backgroundColor: 'rgba(100,100,100, 0.5)', borderRadius: 20 }}>{us.user.name + ': ' + us.score}</FlexLayout>\n        })}\n        <Button style={{\n            backgroundColor: 'transparent',\n            opacity: 0.5,\n            color: 'black',\n            fontSize: '22px',\n            position: 'fixed',\n            bottom: 20, left: 20,\n            borderRadius: 48,\n            width: 148,\n            height: 48,\n            textAlign: 'left'\n\n        }}><GameTTL /></Button>\n    </FlexLayout>\n}\n\nexport const Game = () => {\n    let session = React.useContext(SessionContext);\n    let [state, setState] = React.useState<GameState>(session!.game.state);\n\n\n\n    React.useEffect(() => {\n        let dispose = session!.game.listen(s => {\n            setState(s);\n            // setState({\n            //     ...s, question: {\n            //         text: 'wop wop',\n            //         _id: 'asd',\n            //         category: 'asda',\n            //         open: 'text'\n            //         // textAnswers: ['1', ' asd', '12', 'dd asd', '3', '1', ' asd', '12', 'dd asd', '3']\n            //     },\n            //     state: 'question'\n            // });\n        });\n        return dispose;\n    }, [session]);\n\n\n    return <>\n        {session!.isMobile && state.state === 'question' && state.question && <Question key={state.question._id} q={state.question} gid={state.id!} />}\n        {(state.state === 'subResults' || state.state === 'results') && <Results game={state} />}\n        {!session!.isMobile && (\n            <Button style={{\n                backgroundColor: 'transparent',\n                opacity: 0.5,\n                color: 'black',\n                fontSize: '22px',\n                position: 'fixed',\n                bottom: 20, left: 20,\n                borderRadius: 48,\n                width: 148,\n                height: 48,\n                textAlign: 'left'\n\n            }}><GameTTL /></Button>\n        )}\n    </>;\n}","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { Vector3, ExtrudeGeometry } from 'three';\nimport { SceneContext } from './Scene';\nimport { MeshText2D, textAlign } from 'three-text2d'\n\nexport const useAddMeshRemove = (mesh: THREE.Mesh | THREE.Mesh[]) => {\n    let scene = React.useContext(SceneContext);\n    React.useEffect(() => {\n        let toRemove = Array.isArray(mesh) ? mesh : [mesh];\n        if (scene.scene) {\n            scene.scene.add(...toRemove);\n        }\n        return () => {\n            if (scene.scene) {\n                scene.scene.remove(...toRemove);\n            }\n        }\n    }, [])\n}\n\nexport const getCube = () => {\n    const geometry = new THREE.BoxGeometry(100, 100, 100);;\n    const material = new THREE.MeshLambertMaterial({ color: \"#ff00ee\" })\n    return new THREE.Mesh(geometry, material)\n}\n\nexport const getCard = () => {\n    var height = 440, width = 310, radius = 40;\n\n    var shape = new THREE.Shape();\n\n\n    shape.moveTo(0, height / 2);\n    shape.lineTo(0, height - radius);\n    shape.absarc(radius, height - radius, radius, THREE.Math.degToRad(180), THREE.Math.degToRad(90), true);\n    shape.lineTo(width - radius, height);\n    shape.absarc(width - radius, height - radius, radius, THREE.Math.degToRad(90), THREE.Math.degToRad(0), true);\n    shape.lineTo(width, radius);\n    shape.absarc(width - radius, radius, radius, THREE.Math.degToRad(0), THREE.Math.degToRad(270), true);\n    shape.lineTo(radius, 0);\n    shape.absarc(radius, radius, radius, THREE.Math.degToRad(270), THREE.Math.degToRad(180), true);\n    shape.lineTo(0, height / 2);\n\n\n\n    var geometry = new THREE.ExtrudeGeometry(shape, {\n        steps: 1,\n        depth: 3,\n        bevelEnabled: false,\n    });\n    var material = new THREE.MeshLambertMaterial({ color: 0xffffff });\n\n    let mesh = new THREE.Mesh(geometry, material);\n\n\n\n    mesh.geometry.center();\n\n    let text = getTextMesh({ width: 440, height: 310, text: 'Q?', fontSize: 440, font: 'Courier', bold: true, x: 200, y: -85 })\n    mesh.add(text);\n    text.position.z = 3;\n    text.rotation.z = THREE.Math.degToRad(90);\n\n    return mesh;\n}\n\nexport let wrapText = (context: CanvasRenderingContext2D, text: string, maxWidth: number, lineHeight: number, color: string, height: number, padding: number, x?: number, y?: number) => {\n    var words = text.split(' ');\n    var line = '';\n    context.fillStyle = color;\n\n    let lines: string[] = [];\n    let realWidth = 0;\n    for (let n = 0; n < words.length; n++) {\n        var testLine = line + words[n] + ' ';\n        var testMetrics = context.measureText(testLine);\n        if (testMetrics.width > maxWidth - (padding * 2) && n > 0) {\n            // context.fillText(line, x, y);\n            lines.push(line);\n            var realMetrics = context.measureText(line);\n            realWidth = Math.max(realWidth, realMetrics.width);\n            line = words[n] + ' ';\n\n\n        }\n        else {\n            line = testLine;\n        }\n    }\n    var realMetrics = context.measureText(line);\n\n    lines.push(line);\n    realWidth = Math.max(realWidth, realMetrics.width);\n\n    let startY = lineHeight + (height - lineHeight * lines.length) / 2 + (y || 0);\n    let startX = (maxWidth - realWidth) / 2 + (x || 0);\n    for (let i = 0; i < lines.length; i++) {\n        context.fillText(lines[i], startX, startY + lineHeight * i);\n    }\n}\nexport let getTextMesh = (props: { width: number, height: number, text: string, fontSize: number, padding?: number, color?: string, font?: string, bold?: boolean, x?: number, y?: number }) => {\n    let { width, height, text, fontSize, padding, color, font, bold, x, y } = props;\n    padding = padding || 0;\n    color = color || 'black';\n    font = font || 'Arial';\n    let canvas = document.createElement('canvas');\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n\n    var context = canvas.getContext('2d')!;\n    context.scale(devicePixelRatio, devicePixelRatio);\n    var maxWidth = width;\n    var lineHeight = fontSize;\n    context.font = `${bold ? 'bold' : ''} ${fontSize}px ${font}`;\n    // context.fillStyle = '#f9e'\n    context.fillStyle = 'rgba(0,0,0,0)'\n    context.fillRect(0, 0, 1000, 1000);\n    wrapText(context, text, maxWidth, lineHeight, color, height, padding, x, y);\n\n    var texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n    texture.minFilter = THREE.LinearFilter;\n\n    let material = new THREE.MeshLambertMaterial({ map: texture, transparent: true });\n\n    var mesh = new THREE.Mesh(new THREE.PlaneGeometry(width, height, 10, 10), material);\n    canvas.remove();\n\n    return mesh;\n}\n\n","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { Scene, SceneContext } from \"./Scene\";\nimport BezierEasing from 'bezier-easing';\nimport { PerspectiveCamera } from 'three';\n\nexport const IN_OUT = [.42, 0, .58, 1] as [number, number, number, number];\n\nexport const interpolate = (from: number, to: number, i: number) => {\n    return (from + (to - from) * i);\n}\n\nexport const useAnimation = (mesh: THREE.Mesh | PerspectiveCamera) => {\n\n    let scene = React.useContext(SceneContext);\n\n    let [animation, setAnimation] = React.useState<{ to: { position?: THREE.Vector3, rotation?: THREE.Vector3 }, from: { position: THREE.Vector3, rotation: THREE.Vector3 }, start: number, end: number, rcb?: BezierEasing.EasingFunction, pcb?: BezierEasing.EasingFunction }>({ to: {}, from: {} as any, start: 0, end: 0 });\n\n    let to = React.useCallback((to: { position?: THREE.Vector3, rotation?: THREE.Vector3, rcb?: [number, number, number, number], pcb?: [number, number, number, number] }, duration: number) => {\n        let now = new Date().getTime();\n        setAnimation({ to, from: { position: mesh.position.clone(), rotation: mesh.rotation.toVector3() }, start: now, end: now + duration, rcb: to.rcb ? BezierEasing(...to.rcb) : undefined, pcb: to.pcb ? BezierEasing(...to.pcb) : undefined });\n    }, []);\n\n    React.useEffect(() => {\n        let dispose = scene.subscribeTicks(() => {\n            let time = new Date().getTime();\n            let mu = time < animation.end ? ((time - animation.start) / (animation.end - animation.start)) : 1;\n\n            if (animation.to.position) {\n                let pmu = animation.pcb ? animation.pcb(mu) : mu;\n                mesh.position.x = interpolate(animation.from.position.x, animation.to.position.x, pmu);\n                mesh.position.y = interpolate(animation.from.position.y, animation.to.position.y, pmu);\n                mesh.position.z = interpolate(animation.from.position.z, animation.to.position.z, pmu);\n            }\n            if (animation.to.rotation) {\n                let rmu = animation.rcb ? animation.rcb(mu) : mu;\n                mesh.rotation.x = interpolate(animation.from.rotation.x, animation.to.rotation.x, rmu);\n                mesh.rotation.y = interpolate(animation.from.rotation.y, animation.to.rotation.y, rmu);\n                mesh.rotation.z = interpolate(animation.from.rotation.z, animation.to.rotation.z, rmu);\n            }\n\n        });\n        return () => {\n            // keep subscription till animation end\n            let time = new Date().getTime();\n            setTimeout(dispose, (animation.end || time) - time);\n            dispose();\n        }\n    }, [animation]);\n\n    return { to };\n}","export const hashCode = (s: string) => {\n    var h = 0, l = s.length, i = 0;\n    if (l > 0)\n        while (i < l)\n            h = (h << 5) - h + s.charCodeAt(i++) | 0;\n    return h;\n};","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { SessionContext } from \"../App\";\nimport { ClientQuestion } from \"../../server/src/game/Game\";\nimport { SceneContext } from \"./Scene\";\nimport { getCard, getTextMesh } from \"./Helpers\";\nimport { Vector3, PerspectiveCamera, Mesh } from \"three\";\nimport { useAnimation } from './useAnimation';\nimport { hashCode } from '../utils/hashCode';\nimport { makeId } from '../utils/makeId';\nimport { camGameRotation, camGamePostion } from './SesssionComponent';\n\nexport const GameCard = React.memo((props: { qid: string, category: string, question?: ClientQuestion, active: boolean, index: number }) => {\n    let session = React.useContext(SessionContext)!;\n    let scene = React.useContext(SceneContext);\n\n    let [card] = React.useState(getCard());\n    let { to: cardAnimatTo } = useAnimation(card);\n    React.useEffect(() => {\n\n        // position above target place\n        card.position.z = props.index * 6 + 700;\n        card.rotation.z = THREE.Math.degToRad(-45);\n\n        // shake stack\n        let positionTremor = 10;\n        let xTremor = hashCode(props.qid + 'x') % positionTremor - positionTremor / 2;\n        card.position.x += xTremor;\n        let yTremor = hashCode(props.qid + 'y') % positionTremor - positionTremor / 2;\n        card.position.y += yTremor;\n\n        let rotationTremor = THREE.Math.degToRad(5);\n        let zTremor = hashCode(props.qid + 'z') % rotationTremor - rotationTremor / 2;\n        card.rotation.z += zTremor;\n\n        // drop to target position\n        let targetPostion = card.position.clone();\n        targetPostion.z -= 700;\n        cardAnimatTo({ position: targetPostion, pcb: [.74, .08, .89, .78] }, 500)\n\n        scene.scene.add(card);\n        return () => {\n            scene.scene.remove(card);\n        }\n    }, []);\n\n\n    React.useEffect(() => {\n        if (props.question!!) {\n            if (props.active) {\n\n                // find position infront of cam\n                let base = 310 + 20;\n                let vertAngle = THREE.Math.degToRad(90 - scene.cam.fov / 2);\n                let distanceV = base / 2 * Math.tan(vertAngle);\n\n                let horisontalBase = (base * scene.cam.aspect) / 2;\n                let horAngle = Math.atan(distanceV / horisontalBase);\n\n                let distanveH = (440 + 20) / 2 * Math.tan(horAngle);\n\n                let camMesh = new Mesh();\n                camMesh.position.copy(camGamePostion);\n                camMesh.rotation.setFromVector3(camGameRotation);\n                camMesh.updateMatrixWorld();\n\n                let mesh = new THREE.Mesh();\n                camMesh.add(mesh);\n                mesh.translateZ(-Math.max(distanceV, distanveH));\n\n                if (session.isMobile) {\n                    let height = 2 * Math.max(distanceV, distanveH) * Math.tan(THREE.Math.degToRad(scene.cam.fov / 2));\n                    // mesh.position.y -= (height - 160) / 2;\n                    mesh.position.y += (height - 310) / 2 - 10;\n                }\n\n                let targetPostion = new Vector3();\n                mesh.getWorldPosition(targetPostion);\n\n                let targetRotation = camGameRotation.clone();\n                targetRotation.z += THREE.Math.degToRad(-90);\n                targetRotation.x += THREE.Math.degToRad(-180);\n\n                let targetRotationVector = targetRotation;\n                cardAnimatTo({\n                    position: targetPostion,\n                    pcb: [.34, .24, .18, 1.06],\n                    rotation: targetRotationVector,\n                    rcb: [.42, 0, .3, 1.01]\n                }, 1000);\n\n            } else {\n                console.log(props.qid, 'animate to old');\n                cardAnimatTo({ position: new Vector3(100, 0, 700), rotation: new Vector3(THREE.Math.degToRad(-90), 0, THREE.Math.degToRad(0)) }, 200);\n            }\n\n        }\n    }, [props.question!!, props.active]);\n\n    React.useEffect(() => {\n        let text: THREE.Mesh;\n        if (props.question && props.question.text) {\n            let text = getTextMesh({\n                width: 440, height: 310,\n                text: props.question.text,\n                fontSize: 40,\n                padding: 40\n            });\n            card.add(text);\n\n            text.rotation.x = THREE.Math.degToRad(180);\n            text.rotation.z = THREE.Math.degToRad(-90);\n            text.position.z = -2;\n        }\n\n        return () => {\n            if (text) {\n                card.remove(text);\n            }\n        }\n    }, [props.question && props.question.text]);\n\n    return <div style={{ display: 'none' }} />;\n\n});\n\n\nexport const GameRender = () => {\n    let scene = React.useContext(SceneContext);\n    let session = React.useContext(SessionContext);\n\n    let [cards, setCards] = React.useState<{ qid: string, category: string, question?: ClientQuestion, active: boolean }[]>([]);\n\n    React.useEffect(() => {\n        scene.cam.rotation.x = THREE.Math.degToRad(45);\n        session!.game.listen(gs => {\n            setCards(gs.stack);\n        });\n    }, []);\n\n    // const reset = React.useCallback(() => {\n    //     let res = [];\n    //     for (let i = 0; i < 10; i++) {\n    //         res.push(\n    //             {\n    //                 qid: makeId(),\n    //                 category: new Date().getTime() + 'test',\n    //                 active: true,\n    //                 question: i === 9 ? { text: new Date().toLocaleTimeString(), _id: makeId(), category: new Date().getTime() + 'test' } : undefined,\n    //             }\n    //         );\n    //     }\n    //     setCards(res);\n    // }, []);\n\n    // React.useEffect(() => {\n    //     reset();\n    // }, []);\n\n    return <>\n        {cards.map((c, i) => <GameCard key={c.qid} index={i} {...c} />)}\n    </>\n\n}\n","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { SessionContext } from '../App';\nimport { SceneContext } from './Scene';\nimport { getCard, getTextMesh } from './Helpers';\nimport { useAnimation } from './useAnimation';\nimport { ClientUserIndexed } from '../model/SessionModel';\nimport { spiralCoord } from '../utils/spiralCoord';\n\n\nconst UserCards = (props: { user: ClientUserIndexed }) => {\n    let scene = React.useContext(SceneContext);\n\n    let [card] = React.useState(getCard());\n    let { to: cardAnimatTo } = useAnimation(card);\n\n    React.useEffect(() => {\n\n        card.rotation.y = THREE.Math.degToRad(180);\n\n        card.position.z = 700;\n\n        let coords = spiralCoord(props.user.index + 2);\n\n        // position above target place\n        card.rotation.z = THREE.Math.degToRad(45);\n        card.translateX(coords[0] * (310 + 30));\n        card.translateY(coords[1] * (440 + 30));\n\n        // drop to target position\n        let targetPostion = card.position.clone();\n        targetPostion.z -= 700;\n        cardAnimatTo({ position: targetPostion, pcb: [.74, .08, .89, .78] }, 500)\n\n        scene.scene.add(card);\n        return () => {\n            scene.scene.remove(card);\n        }\n    }, []);\n\n    React.useEffect(() => {\n        let text = getTextMesh({\n            width: 440, height: 310,\n            text: props.user.name || '???',\n            fontSize: 40,\n            padding: 40\n        });\n        card.add(text);\n\n        text.rotation.x = THREE.Math.degToRad(180);\n        text.rotation.z = THREE.Math.degToRad(-90);\n        text.position.z = -2;\n        return () => {\n            card.remove(text);\n\n        }\n    }, [props.user.name])\n\n    return <><div style={{ display: 'none' }} /></>\n}\n\nexport const JoiningRender = () => {\n    let session = React.useContext(SessionContext)!;\n    let [users, setUsers] = React.useState<Map<string, ClientUserIndexed>>(new Map());\n    React.useEffect(() => {\n        session!.subscribeUsers(u => {\n            setUsers(u);\n            // let map = new Map<string, ClientUserIndexed>();\n            // for (let i = 0; i < 10; i++) {\n            //     map.set(i + '', { index: i, _id: i + '', name: i + '' });\n            // }\n            // setUsers(map);\n        });\n    }, []);\n\n    return <>{Array.from(users.values()).map(u => <UserCards user={u} />)}</>\n}","export const spiralCoord = (n: number) => {\n    let k = Math.ceil((Math.sqrt(n) - 1) / 2)\n    let t = 2 * k + 1;\n    let m = t * t;\n    t = t - 1;\n    if (n >= m - t) {\n        return [k - (m - n), -k]\n    } else { m = m - t }\n    if (n >= m - t) {\n        return [-k, -k + (m - n)]\n    } else { m = m - t }\n    if (n >= m - t) {\n        return [-k + (m - n), k]\n    } else {\n        return [k, k - (m - n - t)]\n    }\n}","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { SessionContext } from \"../App\";\nimport { Scene, SceneContext, minSceneCamZ } from \"./Scene\";\nimport { SessionStateComponent, Game as GameControls } from \"./Controls\";\nimport { GameRender } from './GameRender';\nimport { JoiningRender } from './JoiningRender';\nimport { useAnimation, IN_OUT } from './useAnimation';\nimport { Vector3 } from 'three';\n\nexport const camGamePostion = new Vector3();\nexport const camGameRotation = new Vector3();\n\ncamGamePostion.z = minSceneCamZ;\ncamGamePostion.y = -500;\ncamGameRotation.x = THREE.Math.degToRad(45);\n\nexport const camAwaitPostion = new Vector3();\nexport const camAwaitRotation = new Vector3();\n\ncamAwaitPostion.z = 900;\ncamAwaitPostion.y = 0;\ncamAwaitRotation.x = 0;\n\n\nexport const SessionComponent = () => {\n    return <div style={{ display: 'flex', flexDirection: 'column', width: '100%', height: '100%' }} >\n        <Scene>\n            <SceneRender />\n        </Scene>\n    </div >\n        ;\n}\n\nexport const SceneRender = () => {\n    let session = React.useContext(SessionContext)!;\n    let scene = React.useContext(SceneContext);\n    let [state, setState] = React.useState<'idle' | 'joining' | 'countdown' | 'game'>('idle');\n\n    let { to: camAnimatTo } = useAnimation(scene.cam);\n\n    React.useEffect(() => {\n\n        let sessionState = session.sesssionState;\n        let users = session.users;\n\n        let update = () => {\n            if (sessionState.state === 'await' || sessionState.state === 'connecting') {\n                setState(users.size === 0 ? 'idle' : 'joining')\n            } else if (sessionState.state === 'countdown') {\n                setState('countdown')\n            } else if (sessionState.state === 'game') {\n                setState('game');\n            }\n\n            console.warn(sessionState, users);\n\n        }\n\n\n\n        let sub1 = session.subscribeSessionState(s => {\n            sessionState = s;\n            update();\n        });\n        let sub2 = session.subscribeUsers(u => {\n            users = users;\n            update();\n        });\n        return () => {\n            sub1();\n            sub2();\n        }\n    }, []);\n\n    React.useEffect(() => {\n\n        if (state === 'game' || state === 'countdown') {\n            camAnimatTo({ position: camGamePostion, rotation: camGameRotation, pcb: IN_OUT, rcb: IN_OUT }, 1000);\n        } else if (state === 'idle' || state === 'joining') {\n            camAnimatTo({ position: camAwaitPostion, rotation: camAwaitRotation, pcb: IN_OUT, rcb: IN_OUT }, 1000);\n        }\n    }, [state]);\n\n    const toIdle = React.useCallback(() => { setState('idle') }, []);\n    const tojoining = React.useCallback(() => { setState('joining') }, []);\n\n    return <>\n        {/* <div style={{ position: 'absolute', top: 0 }}>{state}</div> */}\n        {/* <Idle active={state === 'idle'} /> */}\n        {/* <Button style={{ border: state === 'idle' ? '1px solid black' : '' }} onClick={toIdle}>Idle</Button>\n        <Button style={{ border: state === 'joining' ? '1px solid black' : '' }} onClick={tojoining}>joining</Button> */}\n        {session!.isMobile && (state === 'joining' || state === 'countdown') && <SessionStateComponent />}\n        {state === 'game' && <GameControls />}\n        <GameRender />\n        <JoiningRender />\n    </>\n}","import React from 'react';\nimport './App.css';\nimport { SessionModel } from './model/SessionModel';\nimport { SessionComponent } from './components/SesssionComponent';\n\nexport let SessionContext = React.createContext<SessionModel | undefined>(undefined);\n\nconst App: React.FC = () => {\n  let id = window.location.pathname.split('/').filter(s => s.length)[0];\n  let session = new SessionModel(id);\n  return (\n    <SessionContext.Provider value={session}>\n      <SessionComponent />\n    </SessionContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}