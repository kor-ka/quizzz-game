{"version":3,"sources":["model/GameModel.ts","model/SessionModel.ts","ui/ui.tsx","components/Scene.tsx","components/Controls.tsx","components/Helpers.ts","components/useAnimation.tsx","utils/hashCode.ts","components/SesssionComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GameModel","session","state","scores","Map","ttl","stack","setState","listeners","Set","listen","lsitener","add","delete","notify","forEach","l","handleEvent","event","notifyers","type","onGameStarted","reverse","map","q","isCurretn","qid","question","_id","console","warn","active","completed","id","gid","user","users","get","uid","set","score","reset","this","endpoint","window","location","hostname","indexOf","Emitter","socket","emit","message","JSON","stringify","SessionModel","io","usersListeners","sesssionState","sesssionStateListeners","myId","me","meListeners","isMobile","game","init","socketIo","transports","reconnectionAttempts","Number","MAX_SAFE_INTEGER","on","handleBatch","open","batchRaw","batch","parse","e","n","log","notifyUser","notifyMeUser","notifyState","subscribeUsers","listener","subscribeMeUser","subscribeSessionState","Cookie","split","chrome","FlexLayout","Glamorous","div","props","display","flexDirection","flexShrink","WebkitOverflowScrolling","boxSizing","style","marginLeft","undefined","divider","marginRight","marginTop","marginBottom","ButtonInner","minWidth","color","whiteSpace","fontSize","backgroundColor","padding","paddingTop","paddingBottom","justifyContent","borderRadius","cursor","textAlign","userSelect","outline","Button","className","onClick","children","Input","border","selected","input","minHeight","borderWidth","lineHeight","appearance","SceneContext","React","Scene","ref","scene","cam","renderer","frameId","minSceneCamZ","tickListeners","subscribeTicks","start","requestAnimationFrame","tick","stop","cancelAnimationFrame","renderScene","render","current","ReactDOM","width","clientWidth","height","clientHeight","THREE","position","z","y","light","target","antialias","setClearColor","setSize","appendChild","domElement","rotateX","Provider","value","innerWidth","innerHeight","SessionStateComponent","setTimeout","loading","setLoading","SessionContext","s","interval","setInterval","left","Date","getTime","clearInterval","startStop","zIndex","opacity","bottom","right","Math","floor","max","Profile","setMe","onChange","name","alignSelf","defaultValue","placeholder","AnswerText","answer","setAnsser","onPick","answers","a","AnswerOpen","GameTTL","timeout","Question","submited","setSubmited","onSubmit","offset","overflowY","flexGrow","pointerEvents","textAnswers","background","Results","Array","from","values","sort","b","us","Game","key","getTextMesh","text","font","bold","x","canvas","document","createElement","devicePixelRatio","context","getContext","scale","maxWidth","fillStyle","fillRect","words","line","lines","realWidth","length","testLine","measureText","push","realMetrics","startY","startX","i","fillText","wrapText","texture","needsUpdate","minFilter","material","transparent","mesh","remove","interpolate","to","hashCode","h","charCodeAt","SessionComponent","SceneRender","sessionState","update","size","sub1","sub2","u","GameCard","shape","moveTo","lineTo","absarc","degToRad","geometry","steps","depth","bevelEnabled","center","rotation","getCard","card","cardAnimatTo","end","animation","setAnimation","duration","now","clone","toVector3","rcb","BezierEasing","pcb","dispose","time","mu","pmu","rmu","useAnimation","index","xTremor","positionTremor","yTremor","rotationTremor","zTremor","targetPostion","vertAngle","fov","distanceV","base","tan","horisontalBase","aspect","horAngle","atan","distanveH","translateZ","Vector3","getWorldPosition","targetRotation","targetRotationVector","GameRender","cards","setCards","gs","c","createContext","App","pathname","filter","Boolean","match","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f12055f.chunk.js","sourcesContent":["import { Event } from '../../server/src/entity/events';\nimport { SessionModel } from './SessionModel';\nimport { ClientUser } from '../../server/src/user/User';\nimport { ClientQuestion, GameState as State } from '../../server/src/game/Game';\n\nexport interface GameState {\n    id?: string;\n    scores: Map<string, { user: ClientUser, score: number }>;\n    question?: ClientQuestion;\n    stack: { qid: string, category: string, question?: ClientQuestion, active: boolean }[]\n    state: State | 'wait';\n    ttl: number\n}\n\nexport class GameModel {\n    session: SessionModel;\n    constructor(session: SessionModel) {\n        this.session = session;\n    }\n\n    state: GameState = { scores: new Map(), state: 'wait', ttl: 0, stack: [] };\n    setState = (state: Partial<GameState>) => {\n        this.state = { ...this.state, ...state };\n    }\n    listeners = new Set<(state: GameState) => void>();\n\n    listen = (lsitener: (state: GameState) => void) => {\n        this.listeners.add(lsitener);\n        lsitener(this.state);\n        return () => {\n            this.listeners.delete(lsitener);\n        }\n    }\n\n    notify = () => {\n        this.listeners.forEach(l => l(this.state));\n    }\n\n\n    // TOOD create separate game states?\n    handleEvent = (event: Event, notifyers: Set<() => void>) => {\n        if (event.type === 'GameStateChangedEvent') {\n            if (this.state.state === 'wait' && event.state === 'question') {\n                this.session.onGameStarted();\n            }\n            event.stack.reverse();\n            let stack = event.stack.map(q => {\n                let isCurretn = q.qid === (event.question && event.question._id);\n                console.warn(q.qid, event.question && event.question._id);\n                if (isCurretn) {\n                    return { ...q, question: event.question, active: !q.completed };\n                } else {\n                    return { ...q, active: true };\n                }\n            });\n            this.setState({ id: event.gid, question: event.question, state: event.state, ttl: event.ttl || 0, stack });\n            notifyers.add(this.notify);\n        } else if (event.type === 'GameScoreChangedEvent') {\n            let user = this.session.users.get(event.uid);\n            if (user) {\n                this.state.scores.set(event.uid, { user, score: event.score })\n                this.setState({ scores: new Map(this.state.scores) });\n            }\n            notifyers.add(this.notify);\n        }\n    }\n\n    reset = () => {\n        this.state = { scores: new Map(), state: 'wait', ttl: 0, stack: [] };\n        this.notify();\n    }\n\n}","import * as socketIo from 'socket.io-client';\nimport { Message } from '../../server/src/entity/messages';\nimport { ClientUser } from '../../server/src/user/User';\nimport { SessionState } from '../../server/src/session/Session';\nimport * as Cookie from 'js-cookie';\nimport { Event } from '../../server/src/entity/events';\nimport { GameModel } from './GameModel';\nexport const endpoint = window.location.hostname.indexOf('localhost') >= 0 ? 'http://localhost:5000' : '';\n\nclass Emitter {\n    socket: SocketIOClient.Socket;\n    constructor(socket: SocketIOClient.Socket) {\n        this.socket = socket;\n    }\n    emit = (message: Message) => {\n        this.socket.emit('message', JSON.stringify(message));\n    }\n}\n\nexport class SessionModel {\n    id: string;\n    io: Emitter;\n\n    users = new Map<string, ClientUser>();\n    usersListeners = new Set<(users: Map<string, ClientUser>) => void>();\n\n    sesssionState: { state: SessionState | 'connecting', ttl: number } = { state: 'connecting', ttl: 0 };\n    sesssionStateListeners = new Set<(sessionState: { state: SessionState | 'connecting', ttl: number }) => void>();\n\n    myId: string;\n    me?: ClientUser;\n    meListeners = new Set<(me: ClientUser) => void>();\n\n    isMobile?: boolean;\n\n    game = new GameModel(this);\n\n    constructor(id: string) {\n        this.id = id;\n        this.io = this.init();\n        this.myId = Cookie.get('quizzz-game-user')!.split(':')[0];\n\n        this.isMobile = Cookie.get('isMobile') === 'true';\n    }\n\n    init = () => {\n        let socket = socketIo(endpoint, { transports: ['websocket'], reconnectionAttempts: Number.MAX_SAFE_INTEGER });\n        let io = new Emitter(socket);\n        socket.on('event', this.handleBatch);\n        socket.on('connect', () => io.emit({ type: 'InitSession', id: this.id }));\n        socket.on('disconnect', socket.open)\n        socket.on('connect_error', socket.open)\n        socket.on('connect_timeout', socket.open)\n\n        return io;\n    }\n\n    handleBatch = (batchRaw: string) => {\n        let batch: { batch: Event[] } = JSON.parse(batchRaw);\n        let notifyers = new Set<() => void>();\n        batch.batch.forEach(e => this.handleEvent(e, notifyers));\n        notifyers.forEach(n => n());\n    }\n\n    handleEvent = (event: Event, notifyers: Set<() => void>) => {\n        console.log('[event]', event);\n        if (event.type === 'UserUpdatedEvent') {\n            this.users.set(event.user._id, event.user);\n            notifyers.add(this.notifyUser);\n            if (event.user._id === this.myId) {\n                this.me = event.user;\n                notifyers.add(this.notifyMeUser);\n            }\n        } else if (event.type === 'SessionUserJoinedEvent') {\n            this.users.set(event.user._id, event.user);\n            if (event.user._id === this.myId) {\n                this.me = event.user;\n                notifyers.add(this.notifyMeUser);\n            }\n            notifyers.add(this.notifyUser);\n        } else if (event.type === 'SessionUserLeftEvent') {\n            this.users.delete(event.user._id);\n            notifyers.add(this.notifyUser);\n        } else if (event.type === 'SessionStateChangedEvent') {\n            this.sesssionState = { state: event.state, ttl: event.ttl || 0 };\n            notifyers.add(this.notifyState);\n            if (event.state === 'await') {\n                this.game.reset();\n            }\n        }\n\n        this.game.handleEvent(event, notifyers);\n    }\n\n    onGameStarted = () => {\n        if (this.sesssionState.state === 'countdown') {\n            this.sesssionState = { state: 'game', ttl: 0 };\n            this.notifyState();\n        }\n    }\n\n    ////\n    // io\n    ////\n\n    subscribeUsers = (listener: (users: Map<string, ClientUser>) => void) => {\n        this.usersListeners.add(listener);\n        listener(this.users);\n        return () => {\n            this.usersListeners.delete(listener);\n        }\n    }\n\n    subscribeMeUser = (listener: (me: ClientUser) => void) => {\n        this.meListeners.add(listener);\n        if (this.me) { listener(this.me); }\n        return () => {\n            this.meListeners.delete(listener);\n        }\n    }\n\n    subscribeSessionState = (listener: (state: { state: SessionState | 'connecting', ttl: number }) => void) => {\n        this.sesssionStateListeners.add(listener);\n        listener(this.sesssionState);\n        return () => {\n            this.sesssionStateListeners.delete(listener);\n        }\n    }\n\n    notifyUser = () => {\n        this.usersListeners.forEach(l => l(new Map(this.users)));\n        console.log('[session]', 'new users', this.users);\n\n    }\n\n    notifyMeUser = () => {\n        this.meListeners.forEach(l => l({ ...this.me! }));\n        console.log('[session]', 'new me', this.me);\n    }\n\n    notifyState = () => {\n        this.sesssionStateListeners.forEach(l => l({ ...this.sesssionState }));\n        console.log('[session]', 'new state', this.sesssionState);\n    }\n}","import * as React from \"react\";\nimport Glamorous from \"glamorous\";\nexport const isChromium = (window as any).chrome;\n\nexport const FlexLayout = Glamorous.div<{\n    divider?: number;\n    style?: React.CSSProperties;\n}>(props => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexShrink: 0,\n    WebkitOverflowScrolling: \"touch\",\n    boxSizing: \"border-box\",\n    \"> *\": props.style && props.style.flexDirection === 'row' ? {\n        marginLeft: props.divider !== undefined ? props.divider : 5,\n        marginRight: props.divider !== undefined ? props.divider : 5\n    } : {\n            marginTop: props.divider !== undefined ? props.divider : 5,\n            marginBottom: props.divider !== undefined ? props.divider : 5\n        },\n    \">:first-child\": props.style && props.style.flexDirection === 'row' ? {\n        marginLeft: 0\n    } : {\n            marginTop: 0\n        },\n    \">:last-child\": props.style && props.style.flexDirection === 'row' ? {\n        marginRight: 0\n    } : {\n            marginBottom: 0\n        },\n    ...props.style\n}));\n\nexport const Landscape = Glamorous.div({\n    '@media only screen and (orientation: portrait)': {\n        display: 'none',\n    }\n});\n\nexport const Portrait = Glamorous.div({\n    '@media only screen and (orientation: landscape)': {\n        display: 'none',\n    }\n});\n\nconst ButtonInner = Glamorous.div<{ type?: 'danger' }>((props) => ({\n    minWidth: 28,\n    color: 'black',\n    whiteSpace: 'pre-wrap',\n    fontSize: '16px',\n    backgroundColor: props.type === 'danger' ? 'rgba(250, 200, 200, 0.6)' : 'rgba(250, 250, 250, 0.6)',\n    padding: 1,\n    paddingTop: 11,\n    paddingBottom: 9,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    borderRadius: 10,\n    cursor: 'pointer',\n    textAlign: 'center',\n    userSelect: 'none',\n\n    ':focus': {\n        outline: 0\n    },\n\n}));\n\nexport const Button = (props: { className?: string, style?: React.CSSProperties, onClick?: () => void, type?: 'danger', children?: any }) => <ButtonInner type={props.type} className={props.className} style={props.style} onClick={props.onClick}>{props.children}</ButtonInner>\n\nexport const TextContentStyled = Glamorous.div<{ selected?: boolean }>(\n    props => ({\n        whiteSpace: \"pre-wrap\",\n        border: props.selected ? \"1px solid #3E5C6B\" : undefined,\n        color: \"rgba(0, 0, 0, 0.8)\",\n        fontSize: \"16px\",\n        backgroundColor: \"rgba(250, 250, 250, 0.4)\",\n        padding: 10,\n        borderRadius: 10,\n        userSelect: 'none',\n        cursor: \"pointer\"\n    })\n);\n\nexport const ActionTextContentStyled = Glamorous.div<{ selected?: boolean }>(\n    props => ({\n        whiteSpace: \"pre-wrap\",\n        color: \"rgba(0, 0, 0, 0.8)\",\n        fontSize: \"16px\",\n        backgroundColor: \"rgba(250, 250, 250, 0.4)\",\n        padding: 10,\n        userSelect: 'none',\n        borderRadius: 10\n    })\n);\n\nexport const Input = Glamorous.input({\n    minHeight: 24,\n    outline: 0,\n    borderWidth: '0 0 0px',\n    backgroundColor: 'transparent',\n    fontSize: 16,\n    minWidth: 50,\n    lineHeight: 1.5,\n    appearance: 'none',\n});\n\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as THREE from 'three';\nimport { FlexLayout } from \"../ui/ui\";\nexport const isChromium = (window as any).chrome;\n\nexport const SceneContext = React.createContext<{ scene: THREE.Scene, cam: THREE.PerspectiveCamera, subscribeTicks: (listener: () => void) => () => void }>({} as any);\n\nexport class Scene extends React.PureComponent<{}, { scene?: THREE.Scene, cam?: THREE.PerspectiveCamera }> {\n    ref = React.createRef<HTMLDivElement>();\n    scene?: THREE.Scene;\n    cam?: THREE.PerspectiveCamera;\n    renderer?: THREE.WebGLRenderer;\n    frameId?: number;\n    minSceneCamZ = 500;\n\n    tickListeners = new Set<() => void>();\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    subscribeTicks = (listener: () => void) => {\n        this.tickListeners.add(listener);\n        return () => {\n            this.tickListeners.delete(listener);\n        }\n    }\n\n    componentDidMount() {\n\n        if (this.ref.current) {\n            let e = ReactDOM.findDOMNode(this.ref.current) as Element;\n            const width = e.clientWidth\n            const height = e.clientHeight\n            //ADD SCENE\n            this.scene = new THREE.Scene()\n            //ADD CAMERAS\n            this.cam = new THREE.PerspectiveCamera(\n                75,\n                width / height,\n                0.1,\n                // so bad\n                Number.MAX_SAFE_INTEGER\n            )\n            this.cam.position.z = this.minSceneCamZ;\n            this.cam.position.y = -500;\n\n            const color = 0xFFFFFF;\n            const intensity = 1;\n            const light = new THREE.DirectionalLight(color, intensity);\n            light.position.set(0, 10, 400);\n            light.target.position.set(5, 500, 200);\n            this.scene.add(light);\n            this.scene.add(light.target);\n\n            //ADD RENDERER\n            this.renderer = new THREE.WebGLRenderer({ antialias: true })\n            this.renderer.setClearColor('#ffffff')\n            this.renderer.setSize(width, height)\n            e.appendChild(this.renderer.domElement)\n\n            var gridHelper = new THREE.GridHelper(100000, 1000);\n            gridHelper.rotateX(1.5708);\n            // this.scene.add(gridHelper);\n            this.start()\n\n            this.setState({ scene: this.scene, cam: this.cam });\n        }\n\n    }\n    componentWillUnmount() {\n        this.stop()\n        // this.ref.removeChild(this.renderer.domElement)\n    }\n    start = () => {\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.tick)\n        }\n    }\n    stop = () => {\n        cancelAnimationFrame(this.frameId!)\n    }\n    tick = () => {\n        this.tickListeners.forEach(l => l());\n        this.renderScene()\n        this.frameId = window.requestAnimationFrame(this.tick)\n    }\n\n\n    renderScene = () => {\n        this.renderer!.render(this.scene!, this.cam!);\n    }\n    render() {\n        return (\n            <SceneContext.Provider value={{ scene: this.state.scene!, cam: this.state.cam!, subscribeTicks: this.subscribeTicks }}>\n                <div\n                    style={{ width: window.innerWidth, height: window.innerHeight }}\n                    ref={this.ref}\n                />\n                <FlexLayout style={{ width: '100%', height: '100%', position: 'absolute' }}>\n                    {this.state.cam && this.state.scene && this.props.children}\n                </FlexLayout>\n            </SceneContext.Provider>\n        )\n    }\n}","import * as React from \"react\";\nimport { SessionState } from \"../../server/src/session/Session\";\nimport { SessionContext } from \"../App\";\nimport { ClientUser } from \"../../server/src/user/User\";\nimport { Button, Input, FlexLayout } from \"../ui/ui\";\nimport { GameState } from \"../model/GameModel\";\nimport { ClientQuestion } from \"../../server/src/game/Game\";\n\n\nexport const SessionStateComponent = () => {\n    let [state, setState] = React.useState<{ state: SessionState | 'connecting', ttl: number }>({ state: 'connecting', ttl: 0 });\n    let [timeout, setTimeout] = React.useState(0);\n    let [loading, setLoading] = React.useState(false);\n    let session = React.useContext(SessionContext);\n    React.useEffect(() => {\n        let dispose = session!.subscribeSessionState(s => {\n            setLoading(false);\n            setState(s);\n        });\n        return dispose;\n    }, [session]);\n\n    React.useEffect(() => {\n        let interval = setInterval(() => {\n            let left = state.ttl - new Date().getTime();\n            setTimeout(left);\n            if (left <= 0) {\n                clearInterval(interval);\n            }\n        }, 100);\n    }, [state.ttl]);\n\n    let startStop = React.useCallback(() => {\n        setLoading(true);\n        if (state.state === 'await') {\n            session!.io.emit({ type: 'SessionStartGameCountdown', id: session!.id })\n        } else {\n            session!.io.emit({ type: 'SessionStopGameCountdown', id: session!.id })\n        }\n    }, [state.state]);\n\n    let reset = React.useCallback(() => {\n        session!.io.emit({ type: 'SessionReset', id: session!.id })\n    }, [state.state]);\n\n    return <FlexLayout style={{ position: 'absolute', height: '100%', width: '100%', zIndex: 100 }}>\n        <Profile />\n\n        {(state.state === 'await' || state.state === 'countdown') &&\n            <Button\n                onClick={startStop}\n                style={{\n                    opacity: loading ? 0.5 : 1,\n                    position: 'fixed',\n                    bottom: 20,\n                    left: 20,\n                    right: 20,\n                    fontSize: 120,\n                }} >\n                {state.state === 'await' ? 'start' : Math.floor(Math.max(0, (state.ttl - new Date().getTime()) / 1000))}\n            </Button>}\n        {/* <Button onClick={reset} >RESET</Button> */}\n    </FlexLayout>\n}\n\nexport const Users = () => {\n    let [state, setState] = React.useState<Map<string, ClientUser>>(new Map());\n    let session = React.useContext(SessionContext);\n    React.useEffect(() => {\n        let dispose = session!.subscribeUsers(s => {\n            setState(s);\n        });\n        return dispose;\n    }, [session]);\n\n    return <>{JSON.stringify(Array.from(state))}</>\n}\n\nexport const Profile = () => {\n    let [me, setMe] = React.useState<ClientUser>();\n    let session = React.useContext(SessionContext);\n    React.useEffect(() => {\n        let dispose = session!.subscribeMeUser(s => {\n            setMe(s);\n        });\n        return dispose;\n    }, [session]);\n\n    let onChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        session!.io.emit({ type: 'UserRename', name: event.target.value })\n    }, []);\n\n    return <Input style={{ alignSelf: 'strech', textAlign: 'center', fontSize: 50, padding: 20 }} defaultValue={me ? me.name : ''} onChange={onChange} placeholder=\"Your Name\" />;\n}\n\n\nexport const AnswerText = (props: { answers: string[], onPick: (answer: string) => void }) => {\n    const [answer, setAnsser] = React.useState<string>();\n\n    const onPick = React.useCallback((answer: string) => {\n        setAnsser(answer);\n        props.onPick(answer);\n    }, []);\n    return <>\n        {props.answers.map((a) => <Button style={{\n            backgroundColor: a === answer ? 'black' : 'white',\n            color: a === answer ? 'white' : 'black',\n        }} onClick={() => onPick(a)}>{a}</Button>)}\n    </>\n}\n\nexport const AnswerOpen = (props: { onPick: (answer: string) => void }) => {\n    const [answer, setAnsser] = React.useState<string>();\n    const onPick = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        let a = event.target.value;\n        setAnsser(a);\n        props.onPick(a);\n    }, []);\n    return <>\n        <Input style={{ border: '1px solid black', borderRadius: 8 }} onChange={onPick} />\n    </>\n}\n\nexport const GameTTL = () => {\n    let session = React.useContext(SessionContext);\n    let [timeout, setTimeout] = React.useState(0);\n    let [state, setState] = React.useState<GameState>(session!.game.state);\n\n    React.useEffect(() => {\n        let dispose = session!.game.listen(s => {\n            setState(s);\n        });\n        return dispose;\n    }, [session]);\n    React.useEffect(() => {\n        let interval = setInterval(() => {\n            let left = Math.floor(Math.max(0, (state.ttl - new Date().getTime()) / 1000));\n            setTimeout(left);\n            if (left <= 0) {\n                clearInterval(interval);\n            }\n        }, 100);\n    }, [state.ttl]);\n\n    return <>{timeout}</>;\n}\n\nexport const Question = (props: { q: ClientQuestion, gid: string }) => {\n    const [answer, setAnsser] = React.useState<string>();\n    const [submited, setSubmited] = React.useState(false);\n    const onPick = React.useCallback((answer: string) => {\n        setAnsser(answer);\n    }, []);\n    let session = React.useContext(SessionContext);\n\n    const onSubmit = React.useCallback(() => {\n        if (!answer || submited) {\n            return;\n        }\n        session!.io.emit({ type: 'Answer', gid: props.gid, answer, qid: props.q._id });\n        setSubmited(true);\n    }, [answer]);\n\n    let aspect = window.innerWidth / (440 + 20);\n    let offset = (310 + 20) * aspect;\n    return <>\n\n        <FlexLayout style={{ position: 'absolute', height: '100%', width: '100%', overflowY: 'scroll' }} divider={0}>\n\n            <FlexLayout style={{ height: offset }} divider={0} >\n                {/* <Button onClick={() => {\n        setState({ ...state, state: state.state === 'question' ? 'subResults' : 'question' })\n    }}> asdasd</Button> */}\n            </FlexLayout>\n            <FlexLayout style={{ flexGrow: 1, backgroundColor: 'rgba(100,100,100, 0.5)', padding: 20, paddingBottom: 68 }} divider={0}>\n                <FlexLayout style={{ pointerEvents: submited ? 'none' : 'auto' }} >\n                    {props.q.open && <AnswerOpen onPick={onPick} />}\n                    {props.q.textAnswers && <AnswerText answers={props.q.textAnswers} onPick={onPick} />}\n                </FlexLayout>\n\n                <Button onClick={onSubmit} style={{\n                    opacity: !answer || submited ? 0.5 : 1,\n                    color: 'white',\n                    fontSize: '22px',\n                    background: 'black',\n                    position: 'fixed', bottom: 20, right: 20,\n                    borderRadius: 48,\n                    width: 148,\n                    height: 48,\n                }}>{submited ? 'ANSWERED' : 'SUBMIT'}</Button>\n\n                <Button style={{\n                    backgroundColor: 'transparent',\n                    opacity: 0.5,\n                    color: 'black',\n                    fontSize: '22px',\n                    position: 'fixed',\n                    bottom: 20, left: 20,\n                    borderRadius: 48,\n                    width: 148,\n                    height: 48,\n                    textAlign: 'left'\n\n                }}><GameTTL /></Button>\n\n            </FlexLayout>\n        </FlexLayout>\n\n    </>\n}\n\nexport const Results = (props: { game: GameState }) => {\n    return <FlexLayout style={{ height: '100%', width: '100%', padding: 20, overflowY: 'scroll' }}>\n        {Array.from(props.game.scores.values()).sort((a, b) => b.score - a.score).map(us => {\n            return <FlexLayout style={{ padding: 20, backgroundColor: 'rgba(100,100,100, 0.5)', borderRadius: 20 }}>{us.user.name + ': ' + us.score}</FlexLayout>\n        })}\n        <Button style={{\n            backgroundColor: 'transparent',\n            opacity: 0.5,\n            color: 'black',\n            fontSize: '22px',\n            position: 'fixed',\n            bottom: 20, left: 20,\n            borderRadius: 48,\n            width: 148,\n            height: 48,\n            textAlign: 'left'\n\n        }}><GameTTL /></Button>\n    </FlexLayout>\n}\n\nexport const Game = () => {\n    let session = React.useContext(SessionContext);\n    let [state, setState] = React.useState<GameState>(session!.game.state);\n\n\n\n    React.useEffect(() => {\n        let dispose = session!.game.listen(s => {\n            setState(s);\n            // setState({\n            //     ...s, question: {\n            //         text: 'wop wop',\n            //         _id: 'asd',\n            //         category: 'asda',\n            //         open: 'text'\n            //         // textAnswers: ['1', ' asd', '12', 'dd asd', '3', '1', ' asd', '12', 'dd asd', '3']\n            //     },\n            //     state: 'question'\n            // });\n        });\n        return dispose;\n    }, [session]);\n\n\n    return <>\n        {session!.isMobile && state.state === 'question' && state.question && <Question key={state.question._id} q={state.question} gid={state.id!} />}\n        {(state.state === 'subResults' || state.state === 'results') && <Results game={state} />}\n        {!session!.isMobile && (\n            <Button style={{\n                backgroundColor: 'transparent',\n                opacity: 0.5,\n                color: 'black',\n                fontSize: '22px',\n                position: 'fixed',\n                bottom: 20, left: 20,\n                borderRadius: 48,\n                width: 148,\n                height: 48,\n                textAlign: 'left'\n\n            }}><GameTTL /></Button>\n        )}\n    </>;\n}","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { Vector3, ExtrudeGeometry } from 'three';\nimport { SceneContext } from './Scene';\nimport { MeshText2D, textAlign } from 'three-text2d'\n\nexport const useAddMeshRemove = (mesh: THREE.Mesh | THREE.Mesh[]) => {\n    let scene = React.useContext(SceneContext);\n    React.useEffect(() => {\n        let toRemove = Array.isArray(mesh) ? mesh : [mesh];\n        if (scene.scene) {\n            scene.scene.add(...toRemove);\n        }\n        return () => {\n            if (scene.scene) {\n                scene.scene.remove(...toRemove);\n            }\n        }\n    }, [])\n}\n\nexport const getCube = () => {\n    const geometry = new THREE.BoxGeometry(100, 100, 100);;\n    const material = new THREE.MeshLambertMaterial({ color: \"#ff00ee\" })\n    return new THREE.Mesh(geometry, material)\n}\n\nexport const getCard = () => {\n    var height = 440, width = 310, radius = 40;\n\n    var shape = new THREE.Shape();\n\n\n    shape.moveTo(0, height / 2);\n    shape.lineTo(0, height - radius);\n    shape.absarc(radius, height - radius, radius, THREE.Math.degToRad(180), THREE.Math.degToRad(90), true);\n    shape.lineTo(width - radius, height);\n    shape.absarc(width - radius, height - radius, radius, THREE.Math.degToRad(90), THREE.Math.degToRad(0), true);\n    shape.lineTo(width, radius);\n    shape.absarc(width - radius, radius, radius, THREE.Math.degToRad(0), THREE.Math.degToRad(270), true);\n    shape.lineTo(radius, 0);\n    shape.absarc(radius, radius, radius, THREE.Math.degToRad(270), THREE.Math.degToRad(180), true);\n    shape.lineTo(0, height / 2);\n\n\n\n    var geometry = new THREE.ExtrudeGeometry(shape, {\n        steps: 1,\n        depth: 3,\n        bevelEnabled: false,\n    });\n    var material = new THREE.MeshLambertMaterial({ color: 0xffffff });\n\n    let mesh = new THREE.Mesh(geometry, material);\n\n\n\n    mesh.geometry.center();\n\n    let text = getTextMesh({ width: 440, height: 310, text: 'Q?', fontSize: 440, font: 'Courier', bold: true, x: 200, y: -85 })\n    mesh.add(text);\n    text.position.z = 2;\n    text.rotation.z = THREE.Math.degToRad(90);\n\n    return mesh;\n}\n\nexport let wrapText = (context: CanvasRenderingContext2D, text: string, maxWidth: number, lineHeight: number, color: string, height: number, padding: number, x?: number, y?: number) => {\n    var words = text.split(' ');\n    var line = '';\n    context.fillStyle = color;\n\n    let lines: string[] = [];\n    let realWidth = 0;\n    for (let n = 0; n < words.length; n++) {\n        var testLine = line + words[n] + ' ';\n        var testMetrics = context.measureText(testLine);\n        if (testMetrics.width > maxWidth - (padding * 2) && n > 0) {\n            // context.fillText(line, x, y);\n            lines.push(line);\n            var realMetrics = context.measureText(line);\n            realWidth = Math.max(realWidth, realMetrics.width);\n            line = words[n] + ' ';\n\n\n        }\n        else {\n            line = testLine;\n        }\n    }\n    var realMetrics = context.measureText(line);\n\n    lines.push(line);\n    realWidth = Math.max(realWidth, realMetrics.width);\n\n    let startY = lineHeight + (height - lineHeight * lines.length) / 2 + (y || 0);\n    let startX = (maxWidth - realWidth) / 2 + (x || 0);\n    for (let i = 0; i < lines.length; i++) {\n        context.fillText(lines[i], startX, startY + lineHeight * i);\n    }\n}\nexport let getTextMesh = (props: { width: number, height: number, text: string, fontSize: number, padding?: number, color?: string, font?: string, bold?: boolean, x?: number, y?: number }) => {\n    let { width, height, text, fontSize, padding, color, font, bold, x, y } = props;\n    padding = padding || 0;\n    color = color || 'black';\n    font = font || 'Arial';\n    let canvas = document.createElement('canvas');\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n\n    var context = canvas.getContext('2d')!;\n    context.scale(devicePixelRatio, devicePixelRatio);\n    var maxWidth = width;\n    var lineHeight = fontSize;\n    context.font = `${bold ? 'bold' : ''} ${fontSize}px ${font}`;\n    // context.fillStyle = '#f9e'\n    context.fillStyle = 'rgba(0,0,0,0)'\n    context.fillRect(0, 0, 1000, 1000);\n    wrapText(context, text, maxWidth, lineHeight, color, height, padding, x, y);\n\n    var texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n    texture.minFilter = THREE.LinearFilter;\n\n    let material = new THREE.MeshLambertMaterial({ map: texture, transparent: true });\n\n    var mesh = new THREE.Mesh(new THREE.PlaneGeometry(width, height, 10, 10), material);\n    canvas.remove();\n\n    return mesh;\n}\n\n","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { Scene, SceneContext } from \"./Scene\";\nimport BezierEasing from 'bezier-easing';\n\nexport const interpolate = (from: number, to: number, i: number) => {\n    return (from + (to - from) * i);\n}\n\nexport const useAnimation = (mesh: THREE.Mesh) => {\n\n    let scene = React.useContext(SceneContext);\n\n    let [animation, setAnimation] = React.useState<{ to: { position?: THREE.Vector3, rotation?: THREE.Vector3 }, from: { position: THREE.Vector3, rotation: THREE.Vector3 }, start: number, end: number, rcb?: BezierEasing.EasingFunction, pcb?: BezierEasing.EasingFunction }>({ to: {}, from: {} as any, start: 0, end: 0 });\n\n    let to = React.useCallback((to: { position?: THREE.Vector3, rotation?: THREE.Vector3, rcb?: [number, number, number, number], pcb?: [number, number, number, number] }, duration: number) => {\n        let now = new Date().getTime();\n        setAnimation({ to, from: { position: mesh.position.clone(), rotation: mesh.rotation.toVector3() }, start: now, end: now + duration, rcb: to.rcb ? BezierEasing(...to.rcb) : undefined, pcb: to.pcb ? BezierEasing(...to.pcb) : undefined });\n    }, []);\n\n    React.useEffect(() => {\n        let dispose = scene.subscribeTicks(() => {\n            let time = new Date().getTime();\n            let mu = time < animation.end ? ((time - animation.start) / (animation.end - animation.start)) : 1;\n\n            if (animation.to.position) {\n                let pmu = animation.pcb ? animation.pcb(mu) : mu;\n                mesh.position.x = interpolate(animation.from.position.x, animation.to.position.x, pmu);\n                mesh.position.y = interpolate(animation.from.position.y, animation.to.position.y, pmu);\n                mesh.position.z = interpolate(animation.from.position.z, animation.to.position.z, pmu);\n            }\n            if (animation.to.rotation) {\n                let rmu = animation.rcb ? animation.rcb(mu) : mu;\n                mesh.rotation.x = interpolate(animation.from.rotation.x, animation.to.rotation.x, rmu);\n                mesh.rotation.y = interpolate(animation.from.rotation.y, animation.to.rotation.y, rmu);\n                mesh.rotation.z = interpolate(animation.from.rotation.z, animation.to.rotation.z, rmu);\n            }\n\n        });\n        return () => {\n            // keep subscription till animation end\n            let time = new Date().getTime();\n            setTimeout(dispose, (animation.end || time) - time);\n            dispose();\n        }\n    }, [animation]);\n\n    return { to };\n}","export const hashCode = (s: string) => {\n    var h = 0, l = s.length, i = 0;\n    if (l > 0)\n        while (i < l)\n            h = (h << 5) - h + s.charCodeAt(i++) | 0;\n    return h;\n};","import * as THREE from 'three';\nimport * as React from \"react\";\nimport { SessionContext } from \"../App\";\nimport { ClientQuestion } from \"../../server/src/game/Game\";\nimport { Scene, SceneContext } from \"./Scene\";\nimport { SessionStateComponent, Game as GameControls } from \"./Controls\";\nimport { getCard, getTextMesh } from \"./Helpers\";\nimport { Vector3 } from \"three\";\nimport { useAnimation } from './useAnimation';\nimport { hashCode } from '../utils/hashCode';\nimport { makeId } from '../utils/makeId';\n\nexport const SessionComponent = () => {\n    return <div style={{ display: 'flex', flexDirection: 'column', width: '100%', height: '100%' }} >\n        <Scene>\n            <SceneRender />\n        </Scene>\n    </div >\n        ;\n}\n\nexport const SceneRender = () => {\n    let session = React.useContext(SessionContext)!;\n    let scene = React.useContext(SceneContext);\n    let [state, setState] = React.useState<'idle' | 'joining' | 'game'>('idle');\n\n    React.useEffect(() => {\n        let sessionState = session.sesssionState;\n        let users = session.users;\n\n        let update = () => {\n\n            if (sessionState.state === 'await' || sessionState.state === 'connecting') {\n                setState(users.size === 0 ? 'idle' : 'joining')\n            } else if (sessionState.state === 'countdown') {\n                setState('joining')\n            } else if (sessionState.state === 'game') {\n                setState('game');\n            }\n\n            console.warn(sessionState, users);\n\n        }\n\n\n\n        let sub1 = session.subscribeSessionState(s => {\n            sessionState = s;\n            update();\n        });\n        let sub2 = session.subscribeUsers(u => {\n            users = users;\n            update();\n        });\n        return () => {\n            sub1();\n            sub2();\n        }\n    }, []);\n\n    const toIdle = React.useCallback(() => { setState('idle') }, []);\n    const tojoining = React.useCallback(() => { setState('joining') }, []);\n\n    return <>\n        {/* <div style={{ position: 'absolute', top: 0 }}>{state}</div> */}\n        {/* <Idle active={state === 'idle'} /> */}\n        {/* <Button style={{ border: state === 'idle' ? '1px solid black' : '' }} onClick={toIdle}>Idle</Button>\n        <Button style={{ border: state === 'joining' ? '1px solid black' : '' }} onClick={tojoining}>joining</Button> */}\n        {session!.isMobile && state === 'joining' && <SessionStateComponent />}\n        {state === 'game' && <GameControls />}\n        <GameRender />\n    </>\n}\n\nexport const GameCard = React.memo((props: { qid: string, category: string, question?: ClientQuestion, active: boolean, index: number }) => {\n    let session = React.useContext(SessionContext)!;\n    let scene = React.useContext(SceneContext);\n\n    let [card] = React.useState(getCard());\n    let { to: cardAnimatTo } = useAnimation(card);\n    React.useEffect(() => {\n\n        // position above target place\n        card.position.z = props.index * 6 + 700;\n        card.rotation.z = THREE.Math.degToRad(-45);\n\n        // shake stack\n        let positionTremor = 10;\n        let xTremor = hashCode(props.qid + 'x') % positionTremor - positionTremor / 2;\n        card.position.x += xTremor;\n        let yTremor = hashCode(props.qid + 'y') % positionTremor - positionTremor / 2;\n        card.position.y += yTremor;\n\n        let rotationTremor = THREE.Math.degToRad(5);\n        let zTremor = hashCode(props.qid + 'z') % rotationTremor - rotationTremor / 2;\n        card.rotation.z += zTremor;\n\n        // drop to target position\n        let targetPostion = card.position.clone();\n        targetPostion.z -= 700;\n        cardAnimatTo({ position: targetPostion, pcb: [.74, .08, .89, .78] }, 500)\n\n        scene.scene.add(card);\n        return () => {\n            scene.scene.remove(card);\n        }\n    }, []);\n\n\n    React.useEffect(() => {\n        if (props.question!!) {\n            if (props.active) {\n\n                // find position infront of cam\n                let base = 310 + 20;\n                let vertAngle = THREE.Math.degToRad(90 - scene.cam.fov / 2);\n                let distanceV = base / 2 * Math.tan(vertAngle);\n\n                let horisontalBase = (base * scene.cam.aspect) / 2;\n                let horAngle = Math.atan(distanceV / horisontalBase);\n\n                let distanveH = (440 + 20) / 2 * Math.tan(horAngle);\n\n                let mesh = new THREE.Mesh();\n                scene.cam.add(mesh);\n\n                mesh.translateZ(-Math.max(distanceV, distanveH));\n\n                if (session.isMobile) {\n                    let height = 2 * Math.max(distanceV, distanveH) * Math.tan(THREE.Math.degToRad(scene.cam.fov / 2));\n                    // mesh.position.y -= (height - 160) / 2;\n                    mesh.position.y += (height - 310) / 2 - 10;\n                }\n\n                let targetPostion = new Vector3();\n                mesh.getWorldPosition(targetPostion);\n\n                let targetRotation = scene.cam.rotation.clone();\n                targetRotation.z += THREE.Math.degToRad(-90);\n                targetRotation.x += THREE.Math.degToRad(-180);\n\n                let targetRotationVector = targetRotation.toVector3();\n                cardAnimatTo({\n                    position: targetPostion,\n                    pcb: [.34, .24, .18, 1.06],\n                    rotation: targetRotationVector,\n                    rcb: [.42, 0, .3, 1.01]\n                }, 1000);\n\n            } else {\n                console.log(props.qid, 'animate to old');\n                cardAnimatTo({ position: new Vector3(100, 0, 700), rotation: new Vector3(THREE.Math.degToRad(-90), 0, THREE.Math.degToRad(0)) }, 200);\n            }\n\n        }\n    }, [props.question!!, props.active]);\n\n    React.useEffect(() => {\n        let text: THREE.Mesh;\n        if (props.question && props.question.text) {\n            let text = getTextMesh({\n                width: 440, height: 310,\n                text: props.question.text,\n                fontSize: 40,\n                padding: 40\n            });\n            card.add(text);\n\n            text.rotation.x = THREE.Math.degToRad(180);\n            text.rotation.z = THREE.Math.degToRad(-90);\n            text.position.z = -2;\n        }\n\n        return () => {\n            if (text) {\n                card.remove(text);\n            }\n        }\n    }, [props.question && props.question.text]);\n\n    return <div style={{ display: 'none' }} />;\n\n});\n\nexport const GameRender = () => {\n    let scene = React.useContext(SceneContext);\n    scene.cam.rotation.x = THREE.Math.degToRad(45);\n    let session = React.useContext(SessionContext);\n\n\n    // if (session!.isMobile) {\n    //     scene.cam.translateY(50);\n    // }\n\n\n    let [cards, setCards] = React.useState<{ qid: string, category: string, question?: ClientQuestion, active: boolean }[]>([]);\n\n    React.useEffect(() => {\n        session!.game.listen(gs => {\n            setCards(gs.stack);\n        });\n    }, []);\n\n    // const reset = React.useCallback(() => {\n    //     let res = [];\n    //     for (let i = 0; i < 10; i++) {\n    //         res.push(\n    //             {\n    //                 qid: makeId(),\n    //                 category: new Date().getTime() + 'test',\n    //                 active: true,\n    //                 question: i === 9 ? { text: new Date().toLocaleTimeString(), _id: makeId(), category: new Date().getTime() + 'test' } : undefined,\n    //             }\n    //         );\n    //     }\n    //     setCards(res);\n    // }, []);\n\n    // React.useEffect(() => {\n    //     reset();\n    // }, []);\n\n    return <>\n        {cards.map((c, i) => <GameCard key={c.qid} index={i} {...c} />)}\n    </>\n\n}\n","import React from 'react';\nimport './App.css';\nimport { SessionModel } from './model/SessionModel';\nimport { SessionComponent } from './components/SesssionComponent';\n\nexport let SessionContext = React.createContext<SessionModel | undefined>(undefined);\n\nconst App: React.FC = () => {\n  let id = window.location.pathname.split('/').filter(s => s.length)[0];\n  let session = new SessionModel(id);\n  return (\n    <SessionContext.Provider value={session}>\n      <SessionComponent />\n    </SessionContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}